{"ast":null,"code":"// import React from 'react';\n// import { FormattedMessage } from 'react-intl';\n// import { ILoginParams, ILoginValidation } from '../../../models/auth';\n// import { validateLogin, validLogin } from '../utils';\n// interface Props {\n//   onLogin(values: ILoginParams): void;\n//   loading: boolean;\n//   errorMessage: string;\n// }\n// const LoginForm = (props: Props) => {\n//   const { onLogin, loading, errorMessage } = props;\n//   const [formValues, setFormValues] = React.useState<ILoginParams>({ email: '', password: '', rememberMe: false });\n//   const [validate, setValidate] = React.useState<ILoginValidation>();\n//   const onSubmit = React.useCallback(() => {\n//     const validate = validateLogin(formValues);\n//     setValidate(validate);\n//     if (!validLogin(validate)) {\n//       return;\n//     }\n//     onLogin(formValues);\n//   }, [formValues, onLogin]);\n//   return (\n//     <form\n//       style={{ maxWidth: '560px', width: '100%' }}\n//       noValidate\n//       onSubmit={(e) => {\n//         e.preventDefault();\n//         onSubmit();\n//       }}\n//       className=\"row g-3 needs-validation\"\n//     >\n//       {!!errorMessage && (\n//         <div className=\"alert alert-danger\" role=\"alert\" style={{ width: '100%' }}>\n//           {errorMessage}\n//         </div>\n//       )}\n//       <div className=\"col-md-12\">\n//         <label htmlFor=\"inputEmail\" className=\"form-label\">\n//           <FormattedMessage id=\"email\" />\n//         </label>\n//         <input\n//           type=\"text\"\n//           className=\"form-control\"\n//           id=\"inputEmail\"\n//           value={formValues.email}\n//           onChange={(e) => setFormValues({ ...formValues, email: e.target.value })}\n//         />\n//         {!!validate?.email && (\n//           <small className=\"text-danger\">\n//             <FormattedMessage id={validate?.email} />\n//           </small>\n//         )}\n//       </div>\n//       <div className=\"col-md-12\">\n//         <label htmlFor=\"inputPassword\" className=\"form-label\">\n//           <FormattedMessage id=\"password\" />\n//         </label>\n//         <input\n//           type=\"password\"\n//           className=\"form-control\"\n//           id=\"inputPassword\"\n//           value={formValues.password}\n//           onChange={(e) => setFormValues({ ...formValues, password: e.target.value })}\n//         />\n//         {!!validate?.password && (\n//           <small className=\"text-danger\">\n//             <FormattedMessage id={validate?.password} />\n//           </small>\n//         )}\n//       </div>\n//       <div className=\"col-12\">\n//         <div className=\"form-check\">\n//           <input\n//             className=\"form-check-input\"\n//             type=\"checkbox\"\n//             id=\"invalidCheck\"\n//             value=\"\"\n//             checked={formValues.rememberMe}\n//             onChange={(e) => setFormValues({ ...formValues, rememberMe: !!e.target.checked })}\n//           />\n//           <label className=\"form-check-label\" htmlFor=\"invalidCheck\">\n//             <FormattedMessage id=\"rememberMe\" />\n//           </label>\n//         </div>\n//       </div>\n//       <div className=\"row justify-content-md-center\" style={{ margin: '16px 0' }}>\n//         <div className=\"col-md-auto\">\n//           <button\n//             className=\"btn btn-primary\"\n//             type=\"submit\"\n//             style={{ minWidth: '160px', display: 'flex', alignItems: 'center', justifyContent: 'center' }}\n//             disabled={loading}\n//           >\n//             {loading && <div className=\"spinner-border spinner-border-sm text-light mr-2\" role=\"status\" />}\n//             <FormattedMessage id=\"register\" />\n//           </button>\n//         </div>\n//       </div>\n//     </form>\n//   );\n// };\n// export default LoginForm;","map":{"version":3,"sources":["F:/Powergate/code_mau/src/modules/auth/components/LoginForm.tsx"],"names":[],"mappingssourcesContent":["// import React from 'react';\n// import { FormattedMessage } from 'react-intl';\n// import { ILoginParams, ILoginValidation } from '../../../models/auth';\n// import { validateLogin, validLogin } from '../utils';\n\n// interface Props {\n//   onLogin(values: ILoginParams): void;\n//   loading: boolean;\n//   errorMessage: string;\n// }\n\n// const LoginForm = (props: Props) => {\n//   const { onLogin, loading, errorMessage } = props;\n\n//   const [formValues, setFormValues] = React.useState<ILoginParams>({ email: '', password: '', rememberMe: false });\n//   const [validate, setValidate] = React.useState<ILoginValidation>();\n\n//   const onSubmit = React.useCallback(() => {\n//     const validate = validateLogin(formValues);\n\n//     setValidate(validate);\n\n//     if (!validLogin(validate)) {\n//       return;\n//     }\n\n//     onLogin(formValues);\n//   }, [formValues, onLogin]);\n\n//   return (\n//     <form\n//       style={{ maxWidth: '560px', width: '100%' }}\n//       noValidate\n//       onSubmit={(e) => {\n//         e.preventDefault();\n//         onSubmit();\n//       }}\n//       className=\"row g-3 needs-validation\"\n//     >\n//       {!!errorMessage && (\n//         <div className=\"alert alert-danger\" role=\"alert\" style={{ width: '100%' }}>\n//           {errorMessage}\n//         </div>\n//       )}\n\n//       <div className=\"col-md-12\">\n//         <label htmlFor=\"inputEmail\" className=\"form-label\">\n//           <FormattedMessage id=\"email\" />\n//         </label>\n//         <input\n//           type=\"text\"\n//           className=\"form-control\"\n//           id=\"inputEmail\"\n//           value={formValues.email}\n//           onChange={(e) => setFormValues({ ...formValues, email: e.target.value })}\n//         />\n\n//         {!!validate?.email && (\n//           <small className=\"text-danger\">\n//             <FormattedMessage id={validate?.email} />\n//           </small>\n//         )}\n//       </div>\n\n//       <div className=\"col-md-12\">\n//         <label htmlFor=\"inputPassword\" className=\"form-label\">\n//           <FormattedMessage id=\"password\" />\n//         </label>\n//         <input\n//           type=\"password\"\n//           className=\"form-control\"\n//           id=\"inputPassword\"\n//           value={formValues.password}\n//           onChange={(e) => setFormValues({ ...formValues, password: e.target.value })}\n//         />\n\n//         {!!validate?.password && (\n//           <small className=\"text-danger\">\n//             <FormattedMessage id={validate?.password} />\n//           </small>\n//         )}\n//       </div>\n\n//       <div className=\"col-12\">\n//         <div className=\"form-check\">\n//           <input\n//             className=\"form-check-input\"\n//             type=\"checkbox\"\n//             id=\"invalidCheck\"\n//             value=\"\"\n//             checked={formValues.rememberMe}\n//             onChange={(e) => setFormValues({ ...formValues, rememberMe: !!e.target.checked })}\n//           />\n//           <label className=\"form-check-label\" htmlFor=\"invalidCheck\">\n//             <FormattedMessage id=\"rememberMe\" />\n//           </label>\n//         </div>\n//       </div>\n\n//       <div className=\"row justify-content-md-center\" style={{ margin: '16px 0' }}>\n//         <div className=\"col-md-auto\">\n//           <button\n//             className=\"btn btn-primary\"\n//             type=\"submit\"\n//             style={{ minWidth: '160px', display: 'flex', alignItems: 'center', justifyContent: 'center' }}\n//             disabled={loading}\n//           >\n//             {loading && <div className=\"spinner-border spinner-border-sm text-light mr-2\" role=\"status\" />}\n//             <FormattedMessage id=\"register\" />\n//           </button>\n//         </div>\n//       </div>\n//     </form>\n//   );\n// };\n\n// export default LoginForm;\n"]},"metadata":{},"sourceType":"module"}