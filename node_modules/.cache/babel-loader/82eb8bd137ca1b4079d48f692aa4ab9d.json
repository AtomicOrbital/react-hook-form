{"ast":null,"code":"var _jsxFileName = \"F:\\\\Powergate\\\\code_mau\\\\src\\\\modules\\\\auth\\\\pages\\\\LoginPageV2.tsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useForm, Controller } from 'react-hook-form';\nimport { useDispatch } from 'react-redux';\nimport { fetchThunk } from '../../common/redux/thunk';\nimport { API_PATHS } from '../../../configs/api';\nimport { RESPONSE_STATUS_SUCCESS } from '../../../utils/httpResponseCode';\nimport { setUserInfo } from '../redux/authReducer';\nimport Cookies from 'js-cookie';\nimport { ACCESS_TOKEN_KEY } from '../../../utils/constants';\nimport { ROUTES } from '../../../configs/routes';\nimport { replace } from 'connected-react-router';\nimport { getErrorMessageResponse } from '../../../utils';\nimport { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function LoginPageV2() {\n  _s();\n\n  const notify = () => toast(\"Đăng nhập thành công\");\n\n  const dispatch = useDispatch();\n  const {\n    control,\n    handleSubmit,\n    formState: {\n      errors\n    }\n  } = useForm();\n  const onSubmit = React.useCallback(async data => {\n    const json = await dispatch(fetchThunk(API_PATHS.signIn, 'post', {\n      email: data.email,\n      password: data.password\n    }));\n\n    if ((json === null || json === void 0 ? void 0 : json.code) === RESPONSE_STATUS_SUCCESS) {\n      dispatch(setUserInfo(json.data));\n      Cookies.set(ACCESS_TOKEN_KEY, json.data.token, {\n        expires: data.rememberMe ? 7 : undefined\n      });\n      dispatch(replace(ROUTES.home)); // Show successful login message on toast\n\n      alert('Login successful!');\n    } else {\n      alert(getErrorMessageResponse(json));\n    }\n  }, [dispatch]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    style: {\n      height: '100vh',\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'center',\n      flexDirection: 'column'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Login Page\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit(onSubmit),\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(Controller, {\n          control: control,\n          name: \"email\",\n          rules: {\n            required: true\n          },\n          render: ({\n            field: {\n              onChange,\n              value\n            }\n          }) => /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"email\",\n            placeholder: \"Email\",\n            value: value,\n            onChange: onChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 21\n        }, this), errors.email && /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Email is required\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 38\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(Controller, {\n          control: control,\n          name: \"password\",\n          rules: {\n            required: true\n          },\n          render: ({\n            field: {\n              onChange,\n              value\n            }\n          }) => /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            placeholder: \"Password\",\n            value: value,\n            onChange: onChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 21\n        }, this), errors.password && /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Password is required\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 41\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [/*#__PURE__*/_jsxDEV(Controller, {\n            control: control,\n            name: \"rememberMe\",\n            defaultValue: false,\n            render: ({\n              field: {\n                onChange,\n                value\n              }\n            }) => /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"checkbox\",\n              checked: value,\n              onChange: onChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 25\n          }, this), \"Remember me\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: notify,\n        type: \"submit\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 9\n  }, this);\n}\n\n_s(LoginPageV2, \"fbBygSwh2nkEOEeuTCofR/4zQIg=\", false, function () {\n  return [useDispatch, useForm];\n});\n\n_c = LoginPageV2;\n\nvar _c;\n\n$RefreshReg$(_c, \"LoginPageV2\");","map":{"version":3,"sources":["F:/Powergate/code_mau/src/modules/auth/pages/LoginPageV2.tsx"],"names":["React","useForm","Controller","useDispatch","fetchThunk","API_PATHS","RESPONSE_STATUS_SUCCESS","setUserInfo","Cookies","ACCESS_TOKEN_KEY","ROUTES","replace","getErrorMessageResponse","toast","LoginPageV2","notify","dispatch","control","handleSubmit","formState","errors","onSubmit","useCallback","data","json","signIn","email","password","code","set","token","expires","rememberMe","undefined","home","alert","height","display","alignItems","justifyContent","flexDirection","required","field","onChange","value"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { useForm, Controller } from 'react-hook-form';\r\nimport { useDispatch } from 'react-redux';\r\nimport { ThunkDispatch } from 'redux-thunk';\r\nimport { AppState } from '../../../redux/reducer';\r\nimport { Action } from 'redux';\r\nimport { fetchThunk } from '../../common/redux/thunk';\r\nimport { API_PATHS } from '../../../configs/api';\r\nimport { RESPONSE_STATUS_SUCCESS } from '../../../utils/httpResponseCode';\r\nimport { setUserInfo } from '../redux/authReducer';\r\nimport Cookies from 'js-cookie';\r\nimport { ACCESS_TOKEN_KEY } from '../../../utils/constants';\r\nimport { ROUTES } from '../../../configs/routes';\r\nimport { replace } from 'connected-react-router';\r\nimport { getErrorMessageResponse } from '../../../utils';\r\n\r\nimport { toast, ToastContainer } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\nexport default function LoginPageV2() {\r\n    const notify = () => toast(\"Đăng nhập thành công\");\r\n\r\n    const dispatch = useDispatch<ThunkDispatch<AppState, null, Action<string>>>();\r\n    const { control, handleSubmit, formState: { errors } } = useForm();\r\n\r\n    const onSubmit = React.useCallback(async (data: Record<string, any>) => {\r\n        const json = await dispatch(fetchThunk(API_PATHS.signIn, 'post', { email: data.email, password: data.password }));\r\n\r\n        if (json?.code === RESPONSE_STATUS_SUCCESS) {\r\n            dispatch(setUserInfo(json.data));\r\n            Cookies.set(ACCESS_TOKEN_KEY, json.data.token, { expires: data.rememberMe ? 7 : undefined });\r\n            dispatch(replace(ROUTES.home));\r\n            // Show successful login message on toast\r\n            alert('Login successful!');\r\n        } else {\r\n            alert(getErrorMessageResponse(json));\r\n        }\r\n    }, [dispatch]);\r\n\r\n    return (\r\n        <div\r\n            className=\"container\"\r\n            style={{\r\n                height: '100vh',\r\n                display: 'flex',\r\n                alignItems: 'center',\r\n                justifyContent: 'center',\r\n                flexDirection: 'column',\r\n            }}\r\n        >\r\n            <h1>Login Page</h1>\r\n            <form onSubmit={handleSubmit(onSubmit)}>\r\n                <div>\r\n                    <Controller\r\n                        control={control}\r\n                        name=\"email\"\r\n                        rules={{ required: true }}\r\n                        render={({ field: { onChange, value } }) => (\r\n                            <input type=\"email\" placeholder=\"Email\" value={value} onChange={onChange} />\r\n                        )}\r\n                    />\r\n                    {errors.email && <span>Email is required</span>}\r\n                </div>\r\n                <div>\r\n                    <Controller\r\n                        control={control}\r\n                        name=\"password\"\r\n                        rules={{ required: true }}\r\n                        render={({ field: { onChange, value } }) => (\r\n                            <input type=\"password\" placeholder=\"Password\" value={value} onChange={onChange} />\r\n                        )}\r\n                    />\r\n                    {errors.password && <span>Password is required</span>}\r\n                </div>\r\n                <div>\r\n                    <label>\r\n                        <Controller\r\n                            control={control}\r\n                            name=\"rememberMe\"\r\n                            defaultValue={false}\r\n                            render={({ field: { onChange, value } }) => (\r\n                                <input type=\"checkbox\" checked={value} onChange={onChange} />\r\n                            )}\r\n                        />\r\n                        Remember me\r\n                    </label>\r\n                </div>\r\n                <button onClick={notify} type=\"submit\">Submit</button>\r\n                {/* <ToastContainer /> */}\r\n            </form>\r\n        </div>\r\n    );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}