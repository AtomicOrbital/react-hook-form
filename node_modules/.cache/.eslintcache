[{"F:\\Powergate\\code_mau\\src\\index.tsx":"1","F:\\Powergate\\code_mau\\src\\reportWebVitals.ts":"2","F:\\Powergate\\code_mau\\src\\redux\\configureStore.ts":"3","F:\\Powergate\\code_mau\\src\\App.tsx":"4","F:\\Powergate\\code_mau\\src\\modules\\intl\\redux\\intlReducer.ts":"5","F:\\Powergate\\code_mau\\src\\modules\\intl\\component\\ConnectedIntlProvider.tsx":"6","F:\\Powergate\\code_mau\\src\\redux\\sagas.ts":"7","F:\\Powergate\\code_mau\\src\\redux\\reducer.ts":"8","F:\\Powergate\\code_mau\\src\\modules\\intl\\constants.ts":"9","F:\\Powergate\\code_mau\\src\\Routes.tsx":"10","F:\\Powergate\\code_mau\\src\\modules\\auth\\redux\\authReducer.ts":"11","F:\\Powergate\\code_mau\\src\\configs\\routes.ts":"12","F:\\Powergate\\code_mau\\src\\modules\\auth\\pages\\SignUpPage.tsx":"13","F:\\Powergate\\code_mau\\src\\modules\\auth\\pages\\LoginPageV2.tsx":"14","F:\\Powergate\\code_mau\\src\\modules\\auth\\pages\\LoginPage.tsx":"15","F:\\Powergate\\code_mau\\src\\modules\\common\\components\\ProtectedRoute.tsx":"16","F:\\Powergate\\code_mau\\src\\modules\\home\\pages\\HomePage.tsx":"17","F:\\Powergate\\code_mau\\src\\modules\\home\\pages\\ContactPage.tsx":"18","F:\\Powergate\\code_mau\\src\\configs\\api.ts":"19","F:\\Powergate\\code_mau\\src\\utils\\httpResponseCode.ts":"20","F:\\Powergate\\code_mau\\src\\utils\\constants.ts":"21","F:\\Powergate\\code_mau\\src\\modules\\common\\redux\\thunk.ts":"22","F:\\Powergate\\code_mau\\src\\modules\\auth\\components\\LoginForm.tsx":"23","F:\\Powergate\\code_mau\\src\\modules\\auth\\components\\SignUpForm.tsx":"24","F:\\Powergate\\code_mau\\src\\utils\\index.ts":"25","F:\\Powergate\\code_mau\\src\\modules\\auth\\utils.ts":"26","F:\\Powergate\\code_mau\\src\\i18n.js":"27","F:\\Powergate\\code_mau\\src\\modules\\auth\\components\\ConfirmCard.tsx":"28","F:\\Powergate\\code_mau\\src\\modules\\intl\\redux\\photoReducer.ts":"29","F:\\Powergate\\code_mau\\src\\modules\\intl\\redux\\Action\\photoAction.ts":"30","F:\\Powergate\\code_mau\\src\\modules\\intl\\redux\\Types\\photoCardType.ts":"31","F:\\Powergate\\code_mau\\src\\modules\\auth\\components\\PhotoPagination.tsx":"32"},{"size":1322,"mtime":1681923461037,"results":"33","hashOfConfig":"34"},{"size":425,"mtime":1681437024000,"results":"35","hashOfConfig":"34"},{"size":1325,"mtime":1681437024000,"results":"36","hashOfConfig":"34"},{"size":1295,"mtime":1681961923564,"results":"37","hashOfConfig":"34"},{"size":715,"mtime":1681437024000,"results":"38","hashOfConfig":"34"},{"size":531,"mtime":1681437024000,"results":"39","hashOfConfig":"34"},{"size":143,"mtime":1681437024000,"results":"40","hashOfConfig":"34"},{"size":701,"mtime":1682071694259,"results":"41","hashOfConfig":"34"},{"size":231,"mtime":1681791040318,"results":"42","hashOfConfig":"34"},{"size":1227,"mtime":1681959859426,"results":"43","hashOfConfig":"34"},{"size":807,"mtime":1681438176000,"results":"44","hashOfConfig":"34"},{"size":146,"mtime":1681959791178,"results":"45","hashOfConfig":"34"},{"size":4184,"mtime":1681957254187,"results":"46","hashOfConfig":"34"},{"size":5103,"mtime":1681792984284,"results":"47","hashOfConfig":"34"},{"size":2136,"mtime":1681590424338,"results":"48","hashOfConfig":"34"},{"size":570,"mtime":1681437024000,"results":"49","hashOfConfig":"34"},{"size":136,"mtime":1681713625324,"results":"50","hashOfConfig":"34"},{"size":153,"mtime":1681437024000,"results":"51","hashOfConfig":"34"},{"size":640,"mtime":1681811039034,"results":"52","hashOfConfig":"34"},{"size":93,"mtime":1681437024000,"results":"53","hashOfConfig":"34"},{"size":271,"mtime":1681959554621,"results":"54","hashOfConfig":"34"},{"size":1192,"mtime":1681438176000,"results":"55","hashOfConfig":"34"},{"size":3456,"mtime":1681465769400,"results":"56","hashOfConfig":"34"},{"size":16259,"mtime":1681924778168,"results":"57","hashOfConfig":"34"},{"size":444,"mtime":1681437024000,"results":"58","hashOfConfig":"34"},{"size":2147,"mtime":1681791046301,"results":"59","hashOfConfig":"34"},{"size":1674,"mtime":1681924751634,"results":"60","hashOfConfig":"34"},{"size":6671,"mtime":1682173188182,"results":"61","hashOfConfig":"34"},{"size":1634,"mtime":1682166023184,"results":"62","hashOfConfig":"34"},{"size":2845,"mtime":1682165991374,"results":"63","hashOfConfig":"34"},{"size":297,"mtime":1681966864970,"results":"64","hashOfConfig":"34"},{"size":3209,"mtime":1682172918923,"results":"65","hashOfConfig":"34"},{"filePath":"66","messages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},"1nzptiq",{"filePath":"69","messages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"71","messages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"73","messages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"75","messages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"77","messages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"79","messages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"68"},{"filePath":"82","messages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"84","messages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"86","messages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"88","messages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"90","messages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"92","messages":"93","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"68"},{"filePath":"95","messages":"96","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"68"},{"filePath":"98","messages":"99","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"100","messages":"101","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"102","messages":"103","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"104","messages":"105","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"106","messages":"107","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"108","messages":"109","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"110","messages":"111","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"112","messages":"113","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"114","messages":"115","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"116","messages":"117","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118","usedDeprecatedRules":"68"},{"filePath":"119","messages":"120","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"121","messages":"122","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"123","usedDeprecatedRules":"68"},{"filePath":"124","messages":"125","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"127","messages":"128","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"129","messages":"130","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"131","messages":"132","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"133","messages":"134","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"135","messages":"136","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"F:\\Powergate\\code_mau\\src\\index.tsx",[],["137","138"],"F:\\Powergate\\code_mau\\src\\reportWebVitals.ts",[],"F:\\Powergate\\code_mau\\src\\redux\\configureStore.ts",[],"F:\\Powergate\\code_mau\\src\\App.tsx",[],"F:\\Powergate\\code_mau\\src\\modules\\intl\\redux\\intlReducer.ts",[],"F:\\Powergate\\code_mau\\src\\modules\\intl\\component\\ConnectedIntlProvider.tsx",[],"F:\\Powergate\\code_mau\\src\\redux\\sagas.ts",["139"],"import { fork } from '@redux-saga/core/effects';\n\nexport default function* rootSaga() {\n  // we need add saga here\n  //yield fork(someSaga);\n}\n","F:\\Powergate\\code_mau\\src\\redux\\reducer.ts",[],"F:\\Powergate\\code_mau\\src\\modules\\intl\\constants.ts",[],"F:\\Powergate\\code_mau\\src\\Routes.tsx",[],"F:\\Powergate\\code_mau\\src\\modules\\auth\\redux\\authReducer.ts",[],"F:\\Powergate\\code_mau\\src\\configs\\routes.ts",[],"F:\\Powergate\\code_mau\\src\\modules\\auth\\pages\\SignUpPage.tsx",["140","141","142","143","144","145","146","147"],"import React, { useEffect, useState } from 'react';\r\nimport logo from '../../../logo-420-x-108.png';\r\nimport { ISignUpParams } from '../../../models/auth';\r\nimport { useDispatch } from 'react-redux';\r\nimport { ThunkDispatch } from 'redux-thunk';\r\nimport { AppState } from '../../../redux/reducer';\r\nimport { Action } from 'redux';\r\nimport { fetchThunk } from '../../common/redux/thunk';\r\nimport { API_PATHS } from '../../../configs/api';\r\nimport { RESPONSE_STATUS_SUCCESS } from '../../../utils/httpResponseCode';\r\nimport { setUserInfo } from '../redux/authReducer';\r\nimport { ROUTES } from '../../../configs/routes';\r\nimport { replace } from 'connected-react-router';\r\nimport { getErrorMessageResponse } from '../../../utils';\r\nimport SignUpForm from '../components/SignUpForm';\r\nimport { ACCESS_TOKEN_KEY } from '../../../utils/constants';\r\nimport Cookies from 'js-cookie';\r\nimport { useForm } from 'react-hook-form';\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\n\r\nconst SignUpPage = () => {\r\n    const dispatch = useDispatch<ThunkDispatch<AppState, null, Action<string>>>();\r\n    const [loading, setLoading] = useState(false);\r\n    const [errorMessage, setErrorMessage] = useState('');\r\n    const [locations, setLocations] = useState([]);\r\n    const [states, setStates] = useState([]);\r\n    const [idRegion, setIdRegion] = useState('');\r\n\r\n    const { control, handleSubmit, formState: { errors } } = useForm();\r\n\r\n    const getLocation = React.useCallback(async (idRegion?: string) => {\r\n        setLoading(true);\r\n\r\n        const json = await dispatch(\r\n            fetchThunk(idRegion ? `${API_PATHS.getLocation}?pid=${idRegion}` : API_PATHS.getLocation, 'get'),\r\n        );\r\n\r\n        setLoading(false);\r\n\r\n        if (json?.code === RESPONSE_STATUS_SUCCESS) {\r\n            console.log(json.data);\r\n\r\n            idRegion ? setStates(json.data) : setLocations(json.data);\r\n            return;\r\n        }\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        getLocation(idRegion);\r\n    }, [getLocation, idRegion]);\r\n\r\n    function toastMessage(json: string) {\r\n        console.log(json)\r\n        if (json.trim() === \"OK\") {\r\n            toast.success(\"SingUp user sucess!\", {\r\n                autoClose: 3000,\r\n            })\r\n        } else {\r\n            toast.error(json, {\r\n                autoClose: 3000,\r\n            })\r\n        }\r\n    }\r\n\r\n    const onSignUp = React.useCallback(\r\n        async (values: ISignUpParams) => {\r\n            setErrorMessage('');\r\n            setLoading(true);\r\n\r\n            const json = await dispatch(\r\n                fetchThunk(API_PATHS.signUp, 'post', values),\r\n            );\r\n            // console.log(\"json\", json);\r\n\r\n            setLoading(false);\r\n\r\n            if (json?.code === RESPONSE_STATUS_SUCCESS) {\r\n                dispatch(setUserInfo(json.data));\r\n                \r\n\r\n                // Cookies.set(ACCESS_TOKEN_KEY, json.data.token, { expires: values.rememberMe ? 7 : undefined });\r\n                await toastMessage(json.message);\r\n\r\n                dispatch(replace(ROUTES.home));\r\n                return;\r\n            } else {\r\n                toastMessage(json.message)\r\n            }\r\n\r\n            // setErrorMessage(getErrorMessageResponse(json));\r\n        },\r\n        [dispatch],\r\n    );\r\n\r\n    const onChangeRegion = (idRegion: string) => {\r\n        setIdRegion(idRegion);\r\n    };\r\n\r\n    return (\r\n        <div\r\n            className=\"container\"\r\n            style={{\r\n                height: '100vh',\r\n                display: 'flex',\r\n                alignItems: 'center',\r\n                justifyContent: 'center',\r\n                flexDirection: 'column',\r\n            }}\r\n        >\r\n            <img src={logo} alt=\"\" style={{ maxWidth: '250px', margin: '32px' }} />\r\n\r\n            <SignUpForm\r\n                onSignUp={onSignUp}\r\n                loading={loading}\r\n                errorMessage={errorMessage}\r\n                locations={locations}\r\n                states={states}\r\n                // onChangeRegion={onChangeRegion}\r\n            />\r\n            <ToastContainer />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default SignUpPage;\r\n","F:\\Powergate\\code_mau\\src\\modules\\auth\\pages\\LoginPageV2.tsx",["148","149"],"import React, { Fragment, useCallback, useEffect } from 'react';\r\nimport { useForm, Controller } from 'react-hook-form';\r\nimport { useDispatch } from 'react-redux';\r\nimport { ThunkDispatch } from 'redux-thunk';\r\nimport { AppState } from '../../../redux/reducer';\r\nimport { Action } from 'redux';\r\nimport { fetchThunk } from '../../common/redux/thunk';\r\nimport { API_PATHS } from '../../../configs/api';\r\nimport { RESPONSE_STATUS_SUCCESS } from '../../../utils/httpResponseCode';\r\nimport { setUserInfo } from '../redux/authReducer';\r\nimport Cookies from 'js-cookie';\r\nimport { ACCESS_TOKEN_KEY } from '../../../utils/constants';\r\nimport { ROUTES } from '../../../configs/routes';\r\nimport { replace } from 'connected-react-router';\r\nimport { getErrorMessageResponse } from '../../../utils';\r\n\r\nimport logo from '../../../logo-420-x-108.png'\r\n// import toast, { Toaster } from 'react-hot-toast';\r\n\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\nexport default function LoginPageV2() {\r\n\r\n    // const notifyAccess = () => toast(\"Đăng nhập thành công !\");\r\n    // const notifyFailed = () => toast(\"Đăng nhập thất bại !\");\r\n\r\n    const dispatch = useDispatch<ThunkDispatch<AppState, null, Action<string>>>();\r\n    const { control, handleSubmit, formState: { errors } } = useForm();\r\n\r\n    const onSubmit = useCallback(async (data: Record<string, any>) => {\r\n        const json = await dispatch(fetchThunk(API_PATHS.signIn, 'post', { email: data.email, password: data.password }));\r\n\r\n        if (json?.code === RESPONSE_STATUS_SUCCESS) {\r\n            dispatch(setUserInfo(json.data));\r\n\r\n\r\n            Cookies.set(ACCESS_TOKEN_KEY, json.data.token, { expires: data.rememberMe ? 7 : undefined });\r\n            dispatch(replace(ROUTES.home));\r\n            // Show successful login message on toast\r\n            // alert('Login successful!');\r\n            toast.success(\"Đăng nhập thành công\", {\r\n                autoClose: 5000,\r\n                position: 'top-center'\r\n            })\r\n\r\n        } else {\r\n            // alert(getErrorMessageResponse(json));\r\n            // notifyFailed();\r\n            toast.error(\"Đăng nhập thất bại\", {\r\n                autoClose: 5000,\r\n                position: 'top-center',\r\n                icon: '🔥'\r\n            });\r\n        }\r\n    }, [dispatch]);\r\n\r\n    return (\r\n        <Fragment>\r\n            {/* <Toaster\r\n                position=\"top-center\"\r\n                reverseOrder={false}\r\n            /> */}\r\n            <div\r\n                className=\"container\"\r\n                style={{\r\n                    height: '100vh',\r\n                    display: 'flex',\r\n                    alignItems: 'center',\r\n                    justifyContent: 'center',\r\n                    flexDirection: 'column',\r\n                }}\r\n            >\r\n                <img src={logo} alt=\"logo\" style={{ maxWidth: '250px', margin: '32px' }} />\r\n                <h1>Login Page</h1>\r\n                <form onSubmit={handleSubmit(onSubmit)}>\r\n                    <div className='col-md-12'>\r\n                        <Controller\r\n                            control={control}\r\n                            name=\"email\"\r\n                            rules={{ required: true }}\r\n                            render={({ field: { onChange, value } }) => (\r\n                                <input className='form-control mb-2' type=\"email\" placeholder=\"Email\" value={value} onChange={onChange} />\r\n                            )}\r\n                        />\r\n                        {errors.email && <span>Email is required</span>}\r\n                    </div>\r\n                    <div>\r\n                        <Controller\r\n                            control={control}\r\n                            name=\"password\"\r\n                            rules={{ required: true }}\r\n                            render={({ field: { onChange, value } }) => (\r\n                                <input className='form-control mb-2' type=\"password\" placeholder=\"Password\" value={value} onChange={onChange} />\r\n                            )}\r\n                        />\r\n                        {errors.password && <span>Password is required</span>}\r\n                    </div>\r\n                    <div>\r\n                        <label>\r\n                            <Controller\r\n                                control={control}\r\n                                name=\"rememberMe\"\r\n                                defaultValue={false}\r\n                                render={({ field: { onChange, value } }) => (\r\n                                    <input className=\"form-check-input\" type=\"checkbox\" checked={value} onChange={onChange} />\r\n                                )}\r\n                            />\r\n                            Remember me\r\n                        </label>\r\n                    </div>\r\n                    <button className='btn btn-primary' type=\"submit\">Submit</button>\r\n                    <ToastContainer />\r\n                </form>\r\n            </div>\r\n        </Fragment>\r\n    );\r\n}\r\n","F:\\Powergate\\code_mau\\src\\modules\\auth\\pages\\LoginPage.tsx",[],"F:\\Powergate\\code_mau\\src\\modules\\common\\components\\ProtectedRoute.tsx",[],"F:\\Powergate\\code_mau\\src\\modules\\home\\pages\\HomePage.tsx",[],"F:\\Powergate\\code_mau\\src\\modules\\home\\pages\\ContactPage.tsx",[],"F:\\Powergate\\code_mau\\src\\configs\\api.ts",[],"F:\\Powergate\\code_mau\\src\\utils\\httpResponseCode.ts",[],"F:\\Powergate\\code_mau\\src\\utils\\constants.ts",[],"F:\\Powergate\\code_mau\\src\\modules\\common\\redux\\thunk.ts",[],"F:\\Powergate\\code_mau\\src\\modules\\auth\\components\\LoginForm.tsx",[],"F:\\Powergate\\code_mau\\src\\modules\\auth\\components\\SignUpForm.tsx",["150","151","152","153","154","155","156","157"],"import React, { useEffect, useState } from 'react';\r\nimport { useForm, Controller, SubmitHandler } from \"react-hook-form\";\r\nimport { FormattedMessage } from 'react-intl';\r\nimport toast, { Toaster } from 'react-hot-toast';\r\nimport { ISignUpParams, ILocationParams, ISignUpValidation } from '../../../models/auth';\r\nimport { GENDER } from \"../../intl/constants\"\r\nimport { values } from 'lodash';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { Select } from 'antd';\r\n\r\ninterface Props {\r\n    onSignUp(values: ISignUpParams): void;\r\n    loading: boolean;\r\n    errorMessage: string;\r\n    locations: Array<ILocationParams>;\r\n    states: Array<ILocationParams>;\r\n    onChangeRegion(idRegion: string): void;\r\n}\r\n\r\n\r\nconst SingupForm = (props: Props) => {\r\n    const { onSignUp, loading, errorMessage, locations, states, onChangeRegion } = props;\r\n    // console.log(states)\r\n    // console.log(locations)\r\n\r\n    const { control, handleSubmit } = useForm({\r\n        defaultValues: {\r\n            email: '',\r\n            password: '',\r\n            repeatPassword: '',\r\n            name: '',\r\n            gender: '',\r\n            region: [],\r\n            state: [],\r\n        }\r\n    });\r\n    const [formValues, setFormValues] = React.useState<ISignUpParams>({\r\n        email: '',\r\n        password: '',\r\n        repeatPassword: '',\r\n        name: '',\r\n        gender: '',\r\n        region: '',\r\n        state: '',\r\n    });\r\n    // const [validate, setValidate] = React.useState<ISignUpValidation>();\r\n    const [reatPass, setReatPass] = useState<string>(\"\")\r\n\r\n    const onSubmit = React.useCallback(() => {\r\n        // setValidate(validate);\r\n        onSignUp(formValues);\r\n        // console.log(\"thien\")\r\n    }, [formValues, onSignUp]);\r\n\r\n    function toastMessage() {\r\n        if (errorMessage.trim() === \"Login succes\") {\r\n            toast.success(\"Login sucess!\", {\r\n                duration: 2000,\r\n            })\r\n\r\n        } else {\r\n            toast.error(\"Invalid username / password\", {\r\n                duration: 1000,\r\n            })\r\n        }\r\n\r\n    }\r\n\r\n    const { t } = useTranslation();\r\n    const { i18n } = useTranslation();\r\n\r\n    const handleChange = (value: any) => {\r\n        i18n.changeLanguage(value);\r\n    }\r\n\r\n    const { Option } = Select;\r\n    // console.log(formValues)\r\n    return (\r\n        <div\r\n            className=\"container\"\r\n            style={{\r\n                height: '100vh',\r\n                display: 'flex',\r\n                alignItems: 'center',\r\n                justifyContent: 'center',\r\n                flexDirection: 'column',\r\n            }}\r\n        >\r\n            <Select defaultValue=\"vi\" style={{ width: 120 }} onChange={handleChange} >\r\n                <Option value=\"en\">Eng</Option>\r\n                <Option value=\"vi\">Vi</Option>\r\n            </Select>\r\n\r\n\r\n            <form\r\n                onSubmit={handleSubmit(onSubmit)}\r\n                style={{ maxWidth: '560px', width: '100%' }}\r\n                className=\"row g-3 needs-validation\"\r\n            >\r\n\r\n                <Controller\r\n                    name=\"email\"\r\n                    control={control}\r\n                    defaultValue=\"\"\r\n                    rules={{\r\n                        pattern: {\r\n                            value: /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/,\r\n                            message: \"Value is not email\"\r\n                        },\r\n                        required: \"This email is required.\",\r\n                    }}\r\n                    render={({ field, fieldState: { error } }) => (\r\n                        <div className=\"col-md-12\">\r\n                            <label htmlFor=\"inputEmail\" className=\"form-label\">\r\n                                <FormattedMessage id={t('email')} />\r\n                            </label>\r\n                            <input\r\n                                {...field}\r\n                                type=\"text\"\r\n                                name=\"email\"\r\n                                className=\"form-control\"\r\n                                id=\"inputEmail\"\r\n                                onChange={(e) => {\r\n                                    field.onChange(e);\r\n                                    setFormValues({ ...formValues, email: e.target.value })\r\n                                }}\r\n                            />\r\n                            {error && <small className=\"text-danger\">\r\n                                {error.message}\r\n                            </small>}\r\n                        </div>\r\n                    )}\r\n                />\r\n\r\n                <Controller\r\n                    name=\"password\"\r\n                    control={control}\r\n                    defaultValue=\"\"\r\n                    rules={{\r\n                        minLength: {\r\n                            value: 6,\r\n                            message: \"This input must exceed 6 characters\"\r\n                        },\r\n                        required: \"This password is required.\",\r\n\r\n                    }}\r\n                    render={({ field, fieldState: { error } }) => (\r\n                        <div className=\"col-md-12\">\r\n                            <label htmlFor=\"inputPassword\" className=\"form-label\">\r\n                                <FormattedMessage id={t('password')} />\r\n                            </label>\r\n                            <input {...field}\r\n                                type=\"password\"\r\n                                className=\"form-control\"\r\n                                id=\"inputPassword\"\r\n                                onChange={(e) => {\r\n                                    // console.log(e)\r\n                                    field.onChange(e);\r\n                                    setFormValues({ ...formValues, password: e.target.value })\r\n                                }}\r\n                            />\r\n                            {\r\n\r\n                                error && <small className=\"text-danger\">\r\n                                    {error?.message}</small>\r\n                            }\r\n\r\n                        </div>\r\n                    )}\r\n                />\r\n\r\n                {/* repeat password */}\r\n                <Controller\r\n                    name=\"repeatPassword\"\r\n                    control={control}\r\n                    defaultValue=\"\"\r\n                    rules={{\r\n                        minLength: {\r\n                            value: 6,\r\n                            message: \"This input must exceed 6 characters\"\r\n                        },\r\n                        required: \"This repeat password is required.\",\r\n                        validate: (val: string) => {\r\n\r\n                            if (val !== formValues.password) {\r\n                                return \"Your passwords do no match\";\r\n                            }\r\n                        },\r\n                    }}\r\n                    render={({ field, fieldState: { error } }) => (\r\n                        <div className=\"col-md-12\">\r\n                            <label htmlFor=\"inputPassword\" className=\"form-label\">\r\n                                <FormattedMessage id={t('repeatPassword')} />\r\n                            </label>\r\n                            <input {...field}\r\n                                type=\"password\"\r\n                                className=\"form-control\"\r\n                                id=\"inputPassword\"\r\n                                onChange={(e) => {\r\n                                    // console.log(e)\r\n                                    if (e.target.value !== formValues.password) {\r\n                                        // console.log(e.target.value)\r\n                                        // console.log()\r\n\r\n                                        setReatPass(\"Your passwords do no match\")\r\n                                        // return\r\n                                        setFormValues({ ...formValues, repeatPassword: e.target.value })\r\n\r\n                                    } else {\r\n                                        // console.log(formValues.password)\r\n                                        setReatPass(\"\")\r\n                                        setFormValues({ ...formValues, repeatPassword: e.target.value })\r\n\r\n                                    }\r\n                                    // console.log(\"skfjdk\")\r\n                                    field.onChange(e);\r\n                                    // setFormValues({ ...formValues, repeatPassword: e.target.value })\r\n                                }}\r\n                            />\r\n                            {\r\n                                reatPass\r\n                                    ? <small className=\"text-danger\">\r\n                                        {reatPass}</small>\r\n                                    : error && <small className=\"text-danger\">\r\n                                        {error?.message}</small>\r\n                            }\r\n                        </div>\r\n                    )}\r\n                />\r\n                {/* Họ và Tên */}\r\n                <Controller\r\n                    name=\"name\"\r\n                    control={control}\r\n                    rules={{\r\n                        required: \"This fullname is required.\",\r\n\r\n                    }}\r\n                    render={({ field, fieldState: { error } }) => (\r\n                        <div className=\"col-md-12\">\r\n                            <label htmlFor=\"inputPassword\" className=\"form-label\">\r\n                                <FormattedMessage id={t('Name')} />\r\n                            </label>\r\n                            <input {...field}\r\n                                type=\"text\"\r\n                                className=\"form-control\"\r\n                                id=\"inputPassword\"\r\n                                onChange={(e) => {\r\n                                    // console.log(\"name\", e.target.value)\r\n                                    field.onChange(e);\r\n                                    setFormValues({ ...formValues, name: e.target.value })\r\n                                }}\r\n                            />\r\n                            {error && <small className=\"text-danger\">\r\n                                {error?.message}</small>}\r\n                        </div>\r\n                    )}\r\n                />\r\n                {/* Giới Tính */}\r\n                <Controller\r\n                    name=\"gender\"\r\n                    control={control}\r\n                    rules={{\r\n                        required: \"This gender is required.\",\r\n\r\n                    }}\r\n                    render={({ field, fieldState: { error } }) => (\r\n                        <div className=\"col-md-12\">\r\n                            <label htmlFor=\"inputPassword\" className=\"form-label\">\r\n                                <FormattedMessage id={t('gender')} />\r\n                            </label>\r\n                            <select\r\n                                onChange={(e) => {\r\n                                    // console.log(\"gender\",e.target.value)\r\n                                    field.onChange(e);\r\n                                    setFormValues({ ...formValues, gender: e.target.value })\r\n                                }}\r\n                                className=\"form-select\"\r\n                                aria-label=\"Default select example\">\r\n                                <option selected>--select an option--</option>\r\n                                {GENDER.map((gen) => {\r\n                                    return <option key={gen.label}>{gen.value}</option>\r\n                                })}\r\n                            </select>\r\n                            {error && <small className=\"text-danger\">\r\n                                {error?.message}</small>}\r\n                        </div>\r\n                    )}\r\n                />\r\n\r\n                {/* QUốc gia */}\r\n                <Controller\r\n                    name=\"region\"\r\n                    control={control}\r\n                    rules={{\r\n                        required: \"This region is required.\",\r\n\r\n                    }}\r\n                    render={({ field, fieldState: { error } }) => (\r\n                        <div className=\"col-md-12\">\r\n                            <label htmlFor=\"inputPassword\" className=\"form-label\">\r\n                                <FormattedMessage id={t('region')} />\r\n                            </label>\r\n                            <select\r\n                                onChange={(e) => {\r\n                                    let nameRegion = e.target.value\r\n                                    // console.log( \"region\", typeof nameRegion);\r\n                                    onChangeRegion(e.target.value)\r\n                                    field.onChange(e);\r\n                                    setFormValues({ ...formValues, region: nameRegion })\r\n                                }}\r\n                                className=\"form-select\"\r\n                                name=\"region\"\r\n                                aria-label=\"Default select example\">\r\n                                <option selected>--select an option--</option>\r\n                                {locations.map((ci) => {\r\n                                    return <option key={ci.id} value={ci.id} name-id={ci.name}>{ci.name}</option>\r\n                                })}\r\n                            </select>\r\n                            {error && <small className=\"text-danger\">\r\n                                {error?.message}</small>}\r\n                        </div>\r\n                    )}\r\n                />\r\n\r\n                {/* Thành Phố */}\r\n                <Controller\r\n                    name=\"state\"\r\n                    control={control}\r\n                    rules={{\r\n                        required: \"This city is required.\",\r\n\r\n                    }}\r\n                    render={({ field, fieldState: { error } }) => (\r\n                        <div className=\"col-md-12\">\r\n                            <label htmlFor=\"inputPassword\" className=\"form-label\">\r\n                                <FormattedMessage id={t('city')} />\r\n                            </label>\r\n                            <select\r\n                                onChange={(e) => {\r\n                                    // console.log(\"state\", e.target.value)\r\n                                    field.onChange(e);\r\n                                    setFormValues({ ...formValues, state: e.target.value })\r\n                                }}\r\n                                className=\"form-select\"\r\n                                aria-label=\"Default select example\"\r\n                            >\r\n                                <option selected>--select an option--</option>\r\n                                {states.map((ci) => {\r\n                                    return <option key={ci.id} value={ci.id}>{ci.name}</option>\r\n                                })}\r\n                            </select>\r\n                            {error && <small className=\"text-danger\">\r\n                                {error?.message}</small>}\r\n                        </div>\r\n                    )}\r\n                />\r\n\r\n\r\n\r\n                <div className=\"row justify-content-md-center\" style={{ margin: '16px 0' }}>\r\n                    <div className=\"col-md-auto\" style={{ position: \"relative\" }}>\r\n                        <button\r\n                            className=\"btn btn-primary\"\r\n                            type=\"submit\"\r\n                            style={{ minWidth: '160px', display: 'flex', alignItems: 'center', justifyContent: 'center' }}\r\n                            disabled={loading}\r\n                            value=\"Đăng Nhập\"\r\n                        >\r\n                            {loading && <div className=\"spinner-border spinner-border-sm text-light mr-2\" role=\"status\" />}\r\n                            <FormattedMessage id={t('register')} />\r\n\r\n\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n            </form >\r\n\r\n        </div>\r\n\r\n    );\r\n};\r\n\r\nexport default SingupForm;","F:\\Powergate\\code_mau\\src\\utils\\index.ts",[],"F:\\Powergate\\code_mau\\src\\modules\\auth\\utils.ts",["158"],"import { ILoginParams, ILoginValidation, ISignUpParams, ISignUpValidation } from '../../models/auth';\nimport { validEmailRegex } from '../../utils';\n\nconst validateEmail = (email: string) => {\n  if (!email) {\n    return 'emailRequire';\n  }\n\n  if (!validEmailRegex.test(email)) {\n    return 'emailInvalid';\n  }\n\n  return '';\n};\n\nconst validatePassword = (password: string) => {\n  if (!password) {\n    return 'passwordRequire';\n  }\n\n  if (password.length < 4) {\n    return 'minPasswordInvalid';\n  }\n\n  return '';\n};\n\nexport const validateLogin = (values: ILoginParams): ILoginValidation => {\n  return {\n    email: validateEmail(values.email),\n    password: validatePassword(values.password),\n  };\n};\n\nexport const validLogin = (values: ILoginValidation) => {\n  return !values.email && !values.password;\n};\n\nexport const validateRepeatPassword = (password: string, reapeatPassword: string) => {\n  if (!reapeatPassword) {\n    return 'passwordRequire';\n  }\n\n  if (password != reapeatPassword) {\n    return 'matchPasswordInvalid';\n  }\n\n  return '';\n}\n\nconst validateField = (field: string, value: string) => {\n  if (value) return '';\n  let fieldRequire = '';\n  switch (field) {\n    case 'name':\n      fieldRequire = 'nameRequire';\n      break;\n\n    case 'gender':\n      fieldRequire = 'genderRequire';\n      break;\n    case 'region':\n      fieldRequire = 'regionRequire';\n      break;\n    case 'state':\n      fieldRequire = 'stateRequire';\n      break;\n  }\n  return fieldRequire;\n}\n\nexport const validateSignUp = (values: ISignUpParams): ISignUpValidation => {\n  return {\n    email: validateEmail(values.email),\n    password: validatePassword(values.password),\n    repeatPassword: validateRepeatPassword(values.password, values.repeatPassword),\n    name: validateField('name', values.name),\n    gender: validateField('gender', values.gender),\n    region: validateField('region', values.region),\n    state: validateField('state', values.state)\n  };\n};\n\nexport const validSignUp = (values: ISignUpValidation) => {\n  return !values.email && !values.password && !values.repeatPassword && !values.name && !values.gender && !values.region && !values.state;\n}\n","F:\\Powergate\\code_mau\\src\\i18n.js",[],["159","160"],"F:\\Powergate\\code_mau\\src\\modules\\auth\\components\\ConfirmCard.tsx",["161","162","163"],"F:\\Powergate\\code_mau\\src\\modules\\intl\\redux\\photoReducer.ts",[],"F:\\Powergate\\code_mau\\src\\modules\\intl\\redux\\Action\\photoAction.ts",[],"F:\\Powergate\\code_mau\\src\\modules\\intl\\redux\\Types\\photoCardType.ts",[],"F:\\Powergate\\code_mau\\src\\modules\\auth\\components\\PhotoPagination.tsx",["164","165","166","167","168","169","170"],{"ruleId":"171","replacedBy":"172"},{"ruleId":"173","replacedBy":"174"},{"ruleId":"175","severity":1,"message":"176","line":1,"column":10,"nodeType":"177","messageId":"178","endLine":1,"endColumn":14},{"ruleId":"175","severity":1,"message":"179","line":14,"column":10,"nodeType":"177","messageId":"178","endLine":14,"endColumn":33},{"ruleId":"175","severity":1,"message":"180","line":16,"column":10,"nodeType":"177","messageId":"178","endLine":16,"endColumn":26},{"ruleId":"175","severity":1,"message":"181","line":17,"column":8,"nodeType":"177","messageId":"178","endLine":17,"endColumn":15},{"ruleId":"175","severity":1,"message":"182","line":31,"column":13,"nodeType":"177","messageId":"178","endLine":31,"endColumn":20},{"ruleId":"175","severity":1,"message":"183","line":31,"column":22,"nodeType":"177","messageId":"178","endLine":31,"endColumn":34},{"ruleId":"175","severity":1,"message":"184","line":31,"column":49,"nodeType":"177","messageId":"178","endLine":31,"endColumn":55},{"ruleId":"185","severity":1,"message":"186","line":48,"column":8,"nodeType":"187","endLine":48,"endColumn":10,"suggestions":"188"},{"ruleId":"175","severity":1,"message":"189","line":97,"column":11,"nodeType":"177","messageId":"178","endLine":97,"endColumn":25},{"ruleId":"175","severity":1,"message":"190","line":1,"column":40,"nodeType":"177","messageId":"178","endLine":1,"endColumn":49},{"ruleId":"175","severity":1,"message":"179","line":15,"column":10,"nodeType":"177","messageId":"178","endLine":15,"endColumn":33},{"ruleId":"175","severity":1,"message":"190","line":1,"column":17,"nodeType":"177","messageId":"178","endLine":1,"endColumn":26},{"ruleId":"175","severity":1,"message":"191","line":2,"column":31,"nodeType":"177","messageId":"178","endLine":2,"endColumn":44},{"ruleId":"175","severity":1,"message":"192","line":4,"column":17,"nodeType":"177","messageId":"178","endLine":4,"endColumn":24},{"ruleId":"175","severity":1,"message":"193","line":5,"column":42,"nodeType":"177","messageId":"178","endLine":5,"endColumn":59},{"ruleId":"175","severity":1,"message":"194","line":7,"column":10,"nodeType":"177","messageId":"178","endLine":7,"endColumn":16},{"ruleId":"175","severity":1,"message":"195","line":55,"column":14,"nodeType":"177","messageId":"178","endLine":55,"endColumn":26},{"ruleId":"196","severity":1,"message":"197","line":107,"column":43,"nodeType":"198","messageId":"199","endLine":107,"endColumn":44,"suggestions":"200"},{"ruleId":"196","severity":1,"message":"197","line":107,"column":59,"nodeType":"198","messageId":"199","endLine":107,"endColumn":60,"suggestions":"201"},{"ruleId":"202","severity":1,"message":"203","line":44,"column":16,"nodeType":"204","messageId":"205","endLine":44,"endColumn":18},{"ruleId":"171","replacedBy":"172"},{"ruleId":"173","replacedBy":"174"},{"ruleId":"206","severity":1,"message":"207","line":78,"column":11,"nodeType":"208","endLine":82,"endColumn":16},{"ruleId":"206","severity":1,"message":"207","line":93,"column":13,"nodeType":"208","endLine":93,"endColumn":165},{"ruleId":"206","severity":1,"message":"207","line":100,"column":13,"nodeType":"208","endLine":100,"endColumn":170},{"ruleId":"175","severity":1,"message":"209","line":3,"column":8,"nodeType":"177","messageId":"178","endLine":3,"endColumn":20},{"ruleId":"210","severity":1,"message":"211","line":15,"column":12,"nodeType":"177","messageId":"212","endLine":15,"endColumn":23},{"ruleId":"210","severity":1,"message":"213","line":20,"column":11,"nodeType":"177","messageId":"212","endLine":20,"endColumn":27},{"ruleId":"210","severity":1,"message":"214","line":28,"column":11,"nodeType":"177","messageId":"212","endLine":28,"endColumn":23},{"ruleId":"206","severity":1,"message":"215","line":39,"column":17,"nodeType":"208","endLine":43,"endColumn":24},{"ruleId":"206","severity":1,"message":"207","line":54,"column":21,"nodeType":"208","endLine":60,"endColumn":28},{"ruleId":"206","severity":1,"message":"207","line":67,"column":21,"nodeType":"208","endLine":73,"endColumn":28},"no-native-reassign",["216"],"no-negated-in-lhs",["217"],"@typescript-eslint/no-unused-vars","'fork' is defined but never used.","Identifier","unusedVar","'getErrorMessageResponse' is defined but never used.","'ACCESS_TOKEN_KEY' is defined but never used.","'Cookies' is defined but never used.","'control' is assigned a value but never used.","'handleSubmit' is assigned a value but never used.","'errors' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook React.useCallback has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["218"],"'onChangeRegion' is assigned a value but never used.","'useEffect' is defined but never used.","'SubmitHandler' is defined but never used.","'Toaster' is defined but never used.","'ISignUpValidation' is defined but never used.","'values' is defined but never used.","'toastMessage' is defined but never used.","no-useless-escape","Unnecessary escape character: \\..","Literal","unnecessaryEscape",["219","220"],["221","222"],"eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'photoReducer' is defined but never used.","@typescript-eslint/no-redeclare","'currentPage' is already defined.","redeclared","'handlePageChange' is already defined.","'currentItems' is already defined.","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","no-global-assign","no-unsafe-negation",{"desc":"223","fix":"224"},{"messageId":"225","fix":"226","desc":"227"},{"messageId":"228","fix":"229","desc":"230"},{"messageId":"225","fix":"231","desc":"227"},{"messageId":"228","fix":"232","desc":"230"},"Update the dependencies array to be: [dispatch]",{"range":"233","text":"234"},"removeEscape",{"range":"235","text":"236"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"237","text":"238"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"239","text":"236"},{"range":"240","text":"238"},[1983,1985],"[dispatch]",[3271,3272],"",[3271,3271],"\\",[3287,3288],[3287,3287]]