[{"F:\\Powergate\\code_mau\\src\\index.tsx":"1","F:\\Powergate\\code_mau\\src\\reportWebVitals.ts":"2","F:\\Powergate\\code_mau\\src\\redux\\configureStore.ts":"3","F:\\Powergate\\code_mau\\src\\App.tsx":"4","F:\\Powergate\\code_mau\\src\\modules\\intl\\redux\\intlReducer.ts":"5","F:\\Powergate\\code_mau\\src\\modules\\intl\\component\\ConnectedIntlProvider.tsx":"6","F:\\Powergate\\code_mau\\src\\redux\\sagas.ts":"7","F:\\Powergate\\code_mau\\src\\redux\\reducer.ts":"8","F:\\Powergate\\code_mau\\src\\utils\\httpResponseCode.ts":"9","F:\\Powergate\\code_mau\\src\\utils\\constants.ts":"10","F:\\Powergate\\code_mau\\src\\modules\\intl\\constants.ts":"11","F:\\Powergate\\code_mau\\src\\configs\\api.ts":"12","F:\\Powergate\\code_mau\\src\\modules\\common\\redux\\thunk.ts":"13","F:\\Powergate\\code_mau\\src\\Routes.tsx":"14","F:\\Powergate\\code_mau\\src\\modules\\auth\\redux\\authReducer.ts":"15","F:\\Powergate\\code_mau\\src\\configs\\routes.ts":"16","F:\\Powergate\\code_mau\\src\\modules\\common\\components\\ProtectedRoute.tsx":"17","F:\\Powergate\\code_mau\\src\\modules\\auth\\pages\\LoginPage.tsx":"18","F:\\Powergate\\code_mau\\src\\modules\\home\\pages\\HomePage.tsx":"19","F:\\Powergate\\code_mau\\src\\modules\\home\\pages\\ContactPage.tsx":"20","F:\\Powergate\\code_mau\\src\\modules\\auth\\components\\LoginForm.tsx":"21","F:\\Powergate\\code_mau\\src\\utils\\index.ts":"22","F:\\Powergate\\code_mau\\src\\modules\\auth\\utils.ts":"23","F:\\Powergate\\code_mau\\src\\modules\\auth\\pages\\LoginPageV2.tsx":"24","F:\\Powergate\\code_mau\\src\\modules\\auth\\pages\\SignupPage.tsx":"25","F:\\Powergate\\code_mau\\src\\modules\\auth\\pages\\SignUpPage.tsx":"26","F:\\Powergate\\code_mau\\src\\modules\\auth\\components\\SignUpForm.tsx":"27"},{"size":1305,"mtime":1681437024000,"results":"28","hashOfConfig":"29"},{"size":425,"mtime":1681437024000,"results":"30","hashOfConfig":"29"},{"size":1325,"mtime":1681437024000,"results":"31","hashOfConfig":"29"},{"size":1327,"mtime":1681588331547,"results":"32","hashOfConfig":"29"},{"size":715,"mtime":1681437024000,"results":"33","hashOfConfig":"29"},{"size":531,"mtime":1681437024000,"results":"34","hashOfConfig":"29"},{"size":143,"mtime":1681437024000,"results":"35","hashOfConfig":"29"},{"size":575,"mtime":1681437024000,"results":"36","hashOfConfig":"29"},{"size":93,"mtime":1681437024000,"results":"37","hashOfConfig":"29"},{"size":272,"mtime":1681716313225,"results":"38","hashOfConfig":"29"},{"size":231,"mtime":1681791040318,"results":"39","hashOfConfig":"29"},{"size":640,"mtime":1681811039034,"results":"40","hashOfConfig":"29"},{"size":1192,"mtime":1681438176000,"results":"41","hashOfConfig":"29"},{"size":1102,"mtime":1681810518563,"results":"42","hashOfConfig":"29"},{"size":807,"mtime":1681438176000,"results":"43","hashOfConfig":"29"},{"size":129,"mtime":1681810665929,"results":"44","hashOfConfig":"29"},{"size":570,"mtime":1681437024000,"results":"45","hashOfConfig":"29"},{"size":2136,"mtime":1681590424338,"results":"46","hashOfConfig":"29"},{"size":136,"mtime":1681713625324,"results":"47","hashOfConfig":"29"},{"size":153,"mtime":1681437024000,"results":"48","hashOfConfig":"29"},{"size":3456,"mtime":1681465769400,"results":"49","hashOfConfig":"29"},{"size":444,"mtime":1681437024000,"results":"50","hashOfConfig":"29"},{"size":2147,"mtime":1681791046301,"results":"51","hashOfConfig":"29"},{"size":5103,"mtime":1681792984284,"results":"52","hashOfConfig":"29"},{"size":6424,"mtime":1681794686468,"results":"53","hashOfConfig":"29"},{"size":4074,"mtime":1681846797115,"results":"54","hashOfConfig":"29"},{"size":11720,"mtime":1681846858342,"results":"55","hashOfConfig":"29"},{"filePath":"56","messages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},"1nzptiq",{"filePath":"59","messages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"61","messages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"63","messages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"58"},{"filePath":"66","messages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"68","messages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"70","messages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"58"},{"filePath":"73","messages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"75","messages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"77","messages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"79","messages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"81","messages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"83","messages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"85","messages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"87","messages":"88","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"89","messages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"91","messages":"92","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"93","messages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"95","messages":"96","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"97","messages":"98","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"99","messages":"100","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"101","messages":"102","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"103","messages":"104","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"58"},{"filePath":"106","messages":"107","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108","usedDeprecatedRules":"58"},{"filePath":"109","messages":"110","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"112"},{"filePath":"113","messages":"114","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"115","messages":"116","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"F:\\Powergate\\code_mau\\src\\index.tsx",[],["117","118"],"F:\\Powergate\\code_mau\\src\\reportWebVitals.ts",[],"F:\\Powergate\\code_mau\\src\\redux\\configureStore.ts",[],"F:\\Powergate\\code_mau\\src\\App.tsx",["119","120","121","122","123","124","125","126","127","128","129"],"import React from 'react';\nimport './App.css';\nimport { Routes } from './Routes';\nimport Cookies from 'js-cookie';\nimport { ACCESS_TOKEN_KEY } from './utils/constants';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { AppState } from './redux/reducer';\nimport { ThunkDispatch } from 'redux-thunk';\nimport { Action } from 'redux';\nimport { fetchThunk } from './modules/common/redux/thunk';\nimport { API_PATHS } from './configs/api';\nimport { RESPONSE_STATUS_SUCCESS } from './utils/httpResponseCode';\nimport { setUserInfo } from './modules/auth/redux/authReducer';\n\nfunction App() {\n  // const dispatch = useDispatch<ThunkDispatch<AppState, null, Action<string>>>();\n  // const { user } = useSelector((state: AppState) => ({\n  //   user: state.profile.user,\n  // }));\n\n  // const getProfile = React.useCallback(async () => {\n  //   const accessToken = Cookies.get(ACCESS_TOKEN_KEY);\n\n  //   if (accessToken && !user) {\n  //     const json = await dispatch(fetchThunk(API_PATHS.userProfile));\n  //     if (json?.code === RESPONSE_STATUS_SUCCESS) {\n  //       dispatch(setUserInfo({ ...json.data, token: accessToken }));\n  //     }\n  //   }\n  // }, [dispatch, user]);\n\n  // React.useEffect(() => {\n  //   getProfile();\n  // }, [getProfile]);\n\n  return (\n    <>\n      <Routes />\n    </>\n  );\n}\n\nexport default App;\n","F:\\Powergate\\code_mau\\src\\modules\\intl\\redux\\intlReducer.ts",[],"F:\\Powergate\\code_mau\\src\\modules\\intl\\component\\ConnectedIntlProvider.tsx",[],"F:\\Powergate\\code_mau\\src\\redux\\sagas.ts",["130"],"import { fork } from '@redux-saga/core/effects';\n\nexport default function* rootSaga() {\n  // we need add saga here\n  //yield fork(someSaga);\n}\n","F:\\Powergate\\code_mau\\src\\redux\\reducer.ts",[],"F:\\Powergate\\code_mau\\src\\utils\\httpResponseCode.ts",[],"F:\\Powergate\\code_mau\\src\\utils\\constants.ts",[],"F:\\Powergate\\code_mau\\src\\modules\\intl\\constants.ts",[],"F:\\Powergate\\code_mau\\src\\configs\\api.ts",[],"F:\\Powergate\\code_mau\\src\\modules\\common\\redux\\thunk.ts",[],"F:\\Powergate\\code_mau\\src\\Routes.tsx",[],"F:\\Powergate\\code_mau\\src\\modules\\auth\\redux\\authReducer.ts",[],"F:\\Powergate\\code_mau\\src\\configs\\routes.ts",[],"F:\\Powergate\\code_mau\\src\\modules\\common\\components\\ProtectedRoute.tsx",[],"F:\\Powergate\\code_mau\\src\\modules\\auth\\pages\\LoginPage.tsx",[],"F:\\Powergate\\code_mau\\src\\modules\\home\\pages\\HomePage.tsx",[],"F:\\Powergate\\code_mau\\src\\modules\\home\\pages\\ContactPage.tsx",[],"F:\\Powergate\\code_mau\\src\\modules\\auth\\components\\LoginForm.tsx",[],"F:\\Powergate\\code_mau\\src\\utils\\index.ts",[],"F:\\Powergate\\code_mau\\src\\modules\\auth\\utils.ts",["131"],"import { ILoginParams, ILoginValidation, ISignUpParams, ISignUpValidation } from '../../models/auth';\nimport { validEmailRegex } from '../../utils';\n\nconst validateEmail = (email: string) => {\n  if (!email) {\n    return 'emailRequire';\n  }\n\n  if (!validEmailRegex.test(email)) {\n    return 'emailInvalid';\n  }\n\n  return '';\n};\n\nconst validatePassword = (password: string) => {\n  if (!password) {\n    return 'passwordRequire';\n  }\n\n  if (password.length < 4) {\n    return 'minPasswordInvalid';\n  }\n\n  return '';\n};\n\nexport const validateLogin = (values: ILoginParams): ILoginValidation => {\n  return {\n    email: validateEmail(values.email),\n    password: validatePassword(values.password),\n  };\n};\n\nexport const validLogin = (values: ILoginValidation) => {\n  return !values.email && !values.password;\n};\n\nexport const validateRepeatPassword = (password: string, reapeatPassword: string) => {\n  if (!reapeatPassword) {\n    return 'passwordRequire';\n  }\n\n  if (password != reapeatPassword) {\n    return 'matchPasswordInvalid';\n  }\n\n  return '';\n}\n\nconst validateField = (field: string, value: string) => {\n  if (value) return '';\n  let fieldRequire = '';\n  switch (field) {\n    case 'name':\n      fieldRequire = 'nameRequire';\n      break;\n\n    case 'gender':\n      fieldRequire = 'genderRequire';\n      break;\n    case 'region':\n      fieldRequire = 'regionRequire';\n      break;\n    case 'state':\n      fieldRequire = 'stateRequire';\n      break;\n  }\n  return fieldRequire;\n}\n\nexport const validateSignUp = (values: ISignUpParams): ISignUpValidation => {\n  return {\n    email: validateEmail(values.email),\n    password: validatePassword(values.password),\n    repeatPassword: validateRepeatPassword(values.password, values.repeatPassword),\n    name: validateField('name', values.name),\n    gender: validateField('gender', values.gender),\n    region: validateField('region', values.region),\n    state: validateField('state', values.state)\n  };\n};\n\nexport const validSignUp = (values: ISignUpValidation) => {\n  return !values.email && !values.password && !values.repeatPassword && !values.name && !values.gender && !values.region && !values.state;\n}\n","F:\\Powergate\\code_mau\\src\\modules\\auth\\pages\\LoginPageV2.tsx",["132","133"],"import React, { Fragment, useCallback, useEffect } from 'react';\r\nimport { useForm, Controller } from 'react-hook-form';\r\nimport { useDispatch } from 'react-redux';\r\nimport { ThunkDispatch } from 'redux-thunk';\r\nimport { AppState } from '../../../redux/reducer';\r\nimport { Action } from 'redux';\r\nimport { fetchThunk } from '../../common/redux/thunk';\r\nimport { API_PATHS } from '../../../configs/api';\r\nimport { RESPONSE_STATUS_SUCCESS } from '../../../utils/httpResponseCode';\r\nimport { setUserInfo } from '../redux/authReducer';\r\nimport Cookies from 'js-cookie';\r\nimport { ACCESS_TOKEN_KEY } from '../../../utils/constants';\r\nimport { ROUTES } from '../../../configs/routes';\r\nimport { replace } from 'connected-react-router';\r\nimport { getErrorMessageResponse } from '../../../utils';\r\n\r\nimport logo from '../../../logo-420-x-108.png'\r\n// import toast, { Toaster } from 'react-hot-toast';\r\n\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\nexport default function LoginPageV2() {\r\n\r\n    // const notifyAccess = () => toast(\"Đăng nhập thành công !\");\r\n    // const notifyFailed = () => toast(\"Đăng nhập thất bại !\");\r\n\r\n    const dispatch = useDispatch<ThunkDispatch<AppState, null, Action<string>>>();\r\n    const { control, handleSubmit, formState: { errors } } = useForm();\r\n\r\n    const onSubmit = useCallback(async (data: Record<string, any>) => {\r\n        const json = await dispatch(fetchThunk(API_PATHS.signIn, 'post', { email: data.email, password: data.password }));\r\n\r\n        if (json?.code === RESPONSE_STATUS_SUCCESS) {\r\n            dispatch(setUserInfo(json.data));\r\n\r\n\r\n            Cookies.set(ACCESS_TOKEN_KEY, json.data.token, { expires: data.rememberMe ? 7 : undefined });\r\n            dispatch(replace(ROUTES.home));\r\n            // Show successful login message on toast\r\n            // alert('Login successful!');\r\n            toast.success(\"Đăng nhập thành công\", {\r\n                autoClose: 5000,\r\n                position: 'top-center'\r\n            })\r\n\r\n        } else {\r\n            // alert(getErrorMessageResponse(json));\r\n            // notifyFailed();\r\n            toast.error(\"Đăng nhập thất bại\", {\r\n                autoClose: 5000,\r\n                position: 'top-center',\r\n                icon: '🔥'\r\n            });\r\n        }\r\n    }, [dispatch]);\r\n\r\n    return (\r\n        <Fragment>\r\n            {/* <Toaster\r\n                position=\"top-center\"\r\n                reverseOrder={false}\r\n            /> */}\r\n            <div\r\n                className=\"container\"\r\n                style={{\r\n                    height: '100vh',\r\n                    display: 'flex',\r\n                    alignItems: 'center',\r\n                    justifyContent: 'center',\r\n                    flexDirection: 'column',\r\n                }}\r\n            >\r\n                <img src={logo} alt=\"logo\" style={{ maxWidth: '250px', margin: '32px' }} />\r\n                <h1>Login Page</h1>\r\n                <form onSubmit={handleSubmit(onSubmit)}>\r\n                    <div className='col-md-12'>\r\n                        <Controller\r\n                            control={control}\r\n                            name=\"email\"\r\n                            rules={{ required: true }}\r\n                            render={({ field: { onChange, value } }) => (\r\n                                <input className='form-control mb-2' type=\"email\" placeholder=\"Email\" value={value} onChange={onChange} />\r\n                            )}\r\n                        />\r\n                        {errors.email && <span>Email is required</span>}\r\n                    </div>\r\n                    <div>\r\n                        <Controller\r\n                            control={control}\r\n                            name=\"password\"\r\n                            rules={{ required: true }}\r\n                            render={({ field: { onChange, value } }) => (\r\n                                <input className='form-control mb-2' type=\"password\" placeholder=\"Password\" value={value} onChange={onChange} />\r\n                            )}\r\n                        />\r\n                        {errors.password && <span>Password is required</span>}\r\n                    </div>\r\n                    <div>\r\n                        <label>\r\n                            <Controller\r\n                                control={control}\r\n                                name=\"rememberMe\"\r\n                                defaultValue={false}\r\n                                render={({ field: { onChange, value } }) => (\r\n                                    <input className=\"form-check-input\" type=\"checkbox\" checked={value} onChange={onChange} />\r\n                                )}\r\n                            />\r\n                            Remember me\r\n                        </label>\r\n                    </div>\r\n                    <button className='btn btn-primary' type=\"submit\">Submit</button>\r\n                    <ToastContainer />\r\n                </form>\r\n            </div>\r\n        </Fragment>\r\n    );\r\n}\r\n","F:\\Powergate\\code_mau\\src\\modules\\auth\\pages\\SignupPage.tsx",["134","135","136","137","138"],"import React, { useState, useEffect, Fragment } from 'react';\r\nimport axios from 'axios';\r\nimport logo from '../../../logo-420-x-108.png';\r\nimport { Controller, useForm } from 'react-hook-form';\r\n\r\n\r\ninterface Country {\r\n    id: number;\r\n    name: string;\r\n}\r\n\r\nfunction SignupPage() {\r\n    const [countries, setCountries] = useState<Country[]>([]);\r\n    const [selectedCountry, setSelectedCountry] = useState('');\r\n\r\n    useEffect(() => {\r\n        const fetchData = async () => {\r\n            const response = await axios.get('http://api.training.div3.pgtest.co/api/v1/location');\r\n            console.log(\"response\", response);\r\n            setCountries(response.data.data);\r\n        };\r\n\r\n        fetchData();\r\n    }, []);\r\n\r\n    const handleSelectChange = (event: React.ChangeEvent<HTMLSelectElement>) => {\r\n        setSelectedCountry(event.target.value);\r\n    };\r\n\r\n    const { control, handleSubmit, formState: { errors } } = useForm();\r\n\r\n    return (\r\n        <Fragment>\r\n            <div\r\n                className='container'\r\n                style={{\r\n                    height: '100vh',\r\n                    display: 'flex',\r\n                    justifyContent: 'center',\r\n                    alignItems: 'center',\r\n                    flexDirection: 'column'\r\n                }}\r\n            >\r\n                <img src={logo} style={{ maxWidth: '250px', margin: '32px' }} />\r\n                <h1>SignUp Pages</h1>\r\n                <form \r\n                    style={{maxWidth: '560px', width: '100%'}}\r\n                    onSubmit={(e) => {\r\n                        e.preventDefault();\r\n                    \r\n                    }}\r\n                >\r\n                    Địa chỉ email\r\n                    <div className='col-md-12'>\r\n                        <Controller\r\n                            control={control}\r\n                            name=\"email\"\r\n                            rules={{ required: true }}\r\n                            render={({ field: { onChange, value } }) => (\r\n                                <input className='form-control mb-2' type=\"email\" placeholder=\"Email\" value={value} onChange={onChange} />\r\n                            )}\r\n                        />\r\n                    </div>\r\n                    <p>Mật khẩu</p>\r\n                    <div>\r\n                        <Controller\r\n                            control={control}\r\n                            name=\"password\"\r\n                            rules={{ required: true }}\r\n                            render={({ field: { onChange, value } }) => (\r\n                                <input className='form-control mb-2' type=\"password\" placeholder=\"Password\" value={value} onChange={onChange} />\r\n                            )}\r\n                        />\r\n                        {errors.password && <span>Password is required</span>}\r\n                    </div>\r\n                    <p>Xác thực lại mật khẩu</p>\r\n                    <div>\r\n                        <Controller\r\n                            control={control}\r\n                            name=\"password\"\r\n                            rules={{ required: true }}\r\n                            render={({ field: { onChange, value } }) => (\r\n                                <input className='form-control mb-2' type=\"password\" placeholder=\"Xác thực lại mật khẩu\" value={value} onChange={onChange} />\r\n                            )}\r\n                        />\r\n                        {errors.password && <span>Password is required</span>}\r\n                    </div>\r\n                    <p>Họ và tên</p>\r\n                    <div>\r\n                        <Controller\r\n                            control={control}\r\n                            name=\"name\"\r\n                            rules={{ required: true }}\r\n                            render={({ field: { onChange, value } }) => (\r\n                                \r\n                                <input className='form-control mb-2' type=\"text\" placeholder=\"Nhập họ và tên\" value={value} onChange={onChange} />\r\n                            )}\r\n                        />\r\n                        {/* {errors.password && <span>Password is required</span>} */}\r\n                    </div>\r\n                    <p>Giới tính</p>\r\n                    <div>\r\n                        <Controller\r\n                            control={control}\r\n                            name=\"name\"\r\n                            rules={{ required: true }}\r\n                            render={({ field: { onChange, value } }) => (\r\n                                \r\n                                <input className='form-control mb-2' type=\"text\" placeholder=\"Nhập họ và tên\" value={value} onChange={onChange} />\r\n                            )}\r\n                        />\r\n                        {/* {errors.password && <span>Password is required</span>} */}\r\n                    </div>\r\n                    <p>Quốc gia</p>\r\n                    <div>\r\n                        <Controller\r\n                            control={control}\r\n                            name=\"name\"\r\n                            rules={{ required: true }}\r\n                            render={({ field: { onChange, value } }) => (\r\n                                \r\n                                <input className='form-control mb-2' type=\"text\" placeholder=\"Nhập họ và tên\" value={value} onChange={onChange} />\r\n                            )}\r\n                        />\r\n                        {/* {errors.password && <span>Password is required</span>} */}\r\n                    </div>\r\n                    <p>Thành phố</p>\r\n                    <div>\r\n                        <Controller\r\n                            control={control}\r\n                            name=\"name\"\r\n                            rules={{ required: true }}\r\n                            render={({ field: { onChange, value } }) => (\r\n                                \r\n                                <input className='form-control mb-2' type=\"text\" placeholder=\"Nhập họ và tên\" value={value} onChange={onChange} />\r\n                            )}\r\n                        />\r\n                        {/* {errors.password && <span>Password is required</span>} */}\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        </Fragment>\r\n    );\r\n}\r\n\r\nexport default SignupPage;\r\n",["139","140"],"F:\\Powergate\\code_mau\\src\\modules\\auth\\pages\\SignUpPage.tsx",["141","142","143","144","145","146"],"F:\\Powergate\\code_mau\\src\\modules\\auth\\components\\SignUpForm.tsx",["147","148","149","150","151"],{"ruleId":"152","replacedBy":"153"},{"ruleId":"154","replacedBy":"155"},{"ruleId":"156","severity":1,"message":"157","line":4,"column":8,"nodeType":"158","messageId":"159","endLine":4,"endColumn":15},{"ruleId":"156","severity":1,"message":"160","line":5,"column":10,"nodeType":"158","messageId":"159","endLine":5,"endColumn":26},{"ruleId":"156","severity":1,"message":"161","line":6,"column":10,"nodeType":"158","messageId":"159","endLine":6,"endColumn":21},{"ruleId":"156","severity":1,"message":"162","line":6,"column":23,"nodeType":"158","messageId":"159","endLine":6,"endColumn":34},{"ruleId":"156","severity":1,"message":"163","line":7,"column":10,"nodeType":"158","messageId":"159","endLine":7,"endColumn":18},{"ruleId":"156","severity":1,"message":"164","line":8,"column":10,"nodeType":"158","messageId":"159","endLine":8,"endColumn":23},{"ruleId":"156","severity":1,"message":"165","line":9,"column":10,"nodeType":"158","messageId":"159","endLine":9,"endColumn":16},{"ruleId":"156","severity":1,"message":"166","line":10,"column":10,"nodeType":"158","messageId":"159","endLine":10,"endColumn":20},{"ruleId":"156","severity":1,"message":"167","line":11,"column":10,"nodeType":"158","messageId":"159","endLine":11,"endColumn":19},{"ruleId":"156","severity":1,"message":"168","line":12,"column":10,"nodeType":"158","messageId":"159","endLine":12,"endColumn":33},{"ruleId":"156","severity":1,"message":"169","line":13,"column":10,"nodeType":"158","messageId":"159","endLine":13,"endColumn":21},{"ruleId":"156","severity":1,"message":"170","line":1,"column":10,"nodeType":"158","messageId":"159","endLine":1,"endColumn":14},{"ruleId":"171","severity":1,"message":"172","line":44,"column":16,"nodeType":"173","messageId":"174","endLine":44,"endColumn":18},{"ruleId":"156","severity":1,"message":"175","line":1,"column":40,"nodeType":"158","messageId":"159","endLine":1,"endColumn":49},{"ruleId":"156","severity":1,"message":"176","line":15,"column":10,"nodeType":"158","messageId":"159","endLine":15,"endColumn":33},{"ruleId":"156","severity":1,"message":"177","line":13,"column":12,"nodeType":"158","messageId":"159","endLine":13,"endColumn":21},{"ruleId":"156","severity":1,"message":"178","line":14,"column":12,"nodeType":"158","messageId":"159","endLine":14,"endColumn":27},{"ruleId":"156","severity":1,"message":"179","line":26,"column":11,"nodeType":"158","messageId":"159","endLine":26,"endColumn":29},{"ruleId":"156","severity":1,"message":"180","line":30,"column":22,"nodeType":"158","messageId":"159","endLine":30,"endColumn":34},{"ruleId":"181","severity":1,"message":"182","line":44,"column":17,"nodeType":"183","endLine":44,"endColumn":81},{"ruleId":"152","replacedBy":"184"},{"ruleId":"154","replacedBy":"185"},{"ruleId":"156","severity":1,"message":"160","line":16,"column":10,"nodeType":"158","messageId":"159","endLine":16,"endColumn":26},{"ruleId":"156","severity":1,"message":"157","line":17,"column":8,"nodeType":"158","messageId":"159","endLine":17,"endColumn":15},{"ruleId":"156","severity":1,"message":"186","line":31,"column":13,"nodeType":"158","messageId":"159","endLine":31,"endColumn":20},{"ruleId":"156","severity":1,"message":"180","line":31,"column":22,"nodeType":"158","messageId":"159","endLine":31,"endColumn":34},{"ruleId":"156","severity":1,"message":"187","line":31,"column":49,"nodeType":"158","messageId":"159","endLine":31,"endColumn":55},{"ruleId":"188","severity":1,"message":"189","line":48,"column":8,"nodeType":"190","endLine":48,"endColumn":10,"suggestions":"191"},{"ruleId":"156","severity":1,"message":"192","line":1,"column":17,"nodeType":"158","messageId":"159","endLine":1,"endColumn":28},{"ruleId":"156","severity":1,"message":"193","line":3,"column":23,"nodeType":"158","messageId":"159","endLine":3,"endColumn":36},{"ruleId":"194","severity":1,"message":"195","line":56,"column":50,"nodeType":"196","messageId":"197","endLine":56,"endColumn":52},{"ruleId":"194","severity":1,"message":"195","line":73,"column":62,"nodeType":"196","messageId":"197","endLine":73,"endColumn":64},{"ruleId":"194","severity":1,"message":"195","line":96,"column":56,"nodeType":"196","messageId":"197","endLine":96,"endColumn":58},"no-native-reassign",["198"],"no-negated-in-lhs",["199"],"@typescript-eslint/no-unused-vars","'Cookies' is defined but never used.","Identifier","unusedVar","'ACCESS_TOKEN_KEY' is defined but never used.","'useSelector' is defined but never used.","'useDispatch' is defined but never used.","'AppState' is defined but never used.","'ThunkDispatch' is defined but never used.","'Action' is defined but never used.","'fetchThunk' is defined but never used.","'API_PATHS' is defined but never used.","'RESPONSE_STATUS_SUCCESS' is defined but never used.","'setUserInfo' is defined but never used.","'fork' is defined but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","'useEffect' is defined but never used.","'getErrorMessageResponse' is defined but never used.","'countries' is assigned a value but never used.","'selectedCountry' is assigned a value but never used.","'handleSelectChange' is assigned a value but never used.","'handleSubmit' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement",["198"],["199"],"'control' is assigned a value but never used.","'errors' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook React.useCallback has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["200"],"'useCallback' is defined but never used.","'validateLogin' is defined but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","no-global-assign","no-unsafe-negation",{"desc":"201","fix":"202"},"Update the dependencies array to be: [dispatch]",{"range":"203","text":"204"},[1983,1985],"[dispatch]"]